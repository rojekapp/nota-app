{"version":3,"sources":["logo.svg","components/Navbar.js","components/Barang.js","components/Form.js","components/NotFoundPage.js","components/Show.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","list","width","fullList","toolbar","minHeight","alignItems","paddingTop","paddingBottom","title","alignSelf","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","display","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","ProminentAppBar","page","handlePage","classes","useState","drawer","setDrawer","IconShow","res","className","InputBase","placeholder","input","inputProps","IconButton","aria-label","edge","anchor","toggleDrawer","open","event","type","key","AppBar","Toolbar","onClick","Typography","variant","noWrap","Drawer","onClose","clsx","role","onKeyDown","List","to","style","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","Barang","ser","handleChange","currencies","insertChange","changeNum","deletes","DeleteButton","index","e","map","option","Grid","container","marginBottom","item","TextField","id","select","label","value","onChange","target","minWidth","required","optiond","MenuItem","InputLabelProps","shrink","size","InputProps","startAdornment","InputAdornment","maxWidth","quantity","bullet","margin","transform","buttonSuccess","green","buttonProgress","top","left","marginTop","fontSize","pos","ColorButton","withStyles","Button","SimpleCard","login","Date","selectedDate","setSelectedDate","nota","setNota","nomor","setNomor","total","setTotal","total_text","setTotalText","loading","setLoading","success","setSuccess","timer","useRef","buttonClassname","alert","setAlert","currency","setCurrency","changeTotal","tempts","totald","i","length","satuan","ler","angka","rupiah","angkarev","toString","split","reverse","join","substr","convertToRupiah","Number","setSer","number","setNumber","addSubmit","tanggal","a","current","window","setTimeout","fetch","method","body","JSON","stringify","pesanan","replace","barang","headers","result","json","console","log","tempt","push","useEffect","ro","yup","Card","CardContent","FormControl","fontWeight","utils","DateFnsUtils","disableToolbar","format","fullWidth","date","KeyboardButtonProps","defaultValue","border","number_new","tempAts","without","indexs","prefix","sisa","ribuan","match","undefined","formatRupiah","endIcon","disabled","month","getMonth","day","getDate","year","getFullYear","CircularProgress","Snackbar","message","NotFoundPage","useToolbarStyles","paddingRight","highlight","secondary","main","lighten","light","text","dark","flex","rubah","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","EnhancedTableToolbar","component","Tooltip","selected","deleteData","lists","x","data","filter","row","includes","setData","setSelected","paper","table","clip","overflow","ShowPage","setlast","setOrder","setOrderBy","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","fetchData","Paper","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","slice","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","scope","rows","lineHeight","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","App","location","useLocation","sed","setSed","currentPath","pathname","URLSearchParams","Container","path","render","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.897822da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nimport clsx from 'clsx';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  toolbar: {\r\n    minHeight: 128,\r\n    alignItems: 'flex-start',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: 'flex-end',\r\n  }, search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ProminentAppBar({page,handlePage}) {\r\n  const classes = useStyles();\r\n  const [drawer,setDrawer]= useState(false)\r\n  function IconShow({res}) {\r\n    \r\n    if (res == true) {\r\n      return (\r\n       <>\r\n<div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <IconButton aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\r\n            <MoreIcon />\r\n          </IconButton>\r\n       </>\r\n      );\r\n    }\r\n    return (\r\n      <></>\r\n      );\r\n  }\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setDrawer(open);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <Link to=\"/\" style={{textDecoration:'none',color:'black'}}>\r\n\r\n        \r\n          <ListItem button onClick={()=>handlePage(false)}>\r\n            <ListItemIcon><AddBoxIcon /></ListItemIcon>\r\n            <ListItemText primary={'Add Nota'} />\r\n          </ListItem>\r\n          </Link>\r\n          <Link to=\"/show\" style={{textDecoration:'none',color:'black'}}>\r\n          <ListItem button onClick={()=>handlePage(true)}>\r\n            <ListItemIcon><VisibilityIcon /></ListItemIcon>\r\n            <ListItemText primary={'Show Nota'} />\r\n          </ListItem>\r\n          </Link>\r\n      </List>\r\n      \r\n      \r\n    </div>\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className=\"app-bar\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer('left', true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title +' judul-range'} variant=\"h5\" noWrap>\r\n            Nota App\r\n          </Typography>\r\n          <IconShow res={page}/>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor={'left'} open={drawer} onClose={toggleDrawer('left', false)}>\r\n            {list('left')}\r\n          </Drawer>\r\n    </div>\r\n  );\r\n}","import React,{ Component, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TodayRoundedIcon from '@material-ui/icons/TodayRounded';\r\nimport DialpadRoundedIcon from '@material-ui/icons/DialpadRounded';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NotesRoundedIcon from '@material-ui/icons/NotesRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction Barang({ser,handleChange,currencies,insertChange,changeNum,deletes}){\r\n  \r\n  function DeleteButton({res}) {\r\n    const indeks = res.index;\r\n    if (indeks != 1) {\r\n      return (\r\n        <IconButton onClick={(e)=>deletes(res)} color=\"secondary\" style={{padding:'0px'}} aria-label=\"add an alarm\"><CloseIcon /></IconButton>\r\n      );\r\n    }\r\n    return (\r\n      <NotesRoundedIcon />\r\n      );\r\n  }\r\nreturn (\r\n    <>\r\n    {ser.map((option) => (\r\n            \r\n            <Grid container spacing={2} style={{marginBottom:'10px'}}>\r\n             \r\n          <Grid item>\r\n          <DeleteButton res={option}/>\r\n            \r\n          </Grid>\r\n          <Grid item>\r\n          <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Kode Barang\"\r\n          value={option.value}\r\n          onChange={(e)=>handleChange(option.index, e.target.value)}\r\n         style={{minWidth:120}}\r\n         required\r\n        >\r\n          {currencies.map((optiond) => (\r\n            <MenuItem key={optiond.value} value={optiond.value}>\r\n              {optiond.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField InputLabelProps={{\r\n            shrink: true,\r\n          }} required  onChange={(e) => insertChange(option.index, e.target.value)} id=\"standard-required\"   size=\"small\" label=\"Harga Satuan\" value={option.input} variant=\"filled\"  InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <h4>Rp</h4>\r\n              </InputAdornment>\r\n            ),\r\n          }} style={{maxWidth:'200px'}}/>\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField InputLabelProps={{\r\n            shrink: true,\r\n          }} required id=\"standard-required\" onChange={(e) => changeNum(option.index, e.target.value)} type=\"number\" size=\"small\" label=\"Unit\" value={option.quantity} variant=\"filled\" style={{maxWidth:\"100px\"}}  />\r\n          </Grid>\r\n        </Grid>\r\n          ))}\r\n     \r\n    </>\r\n)\r\n        }\r\n        export default Barang;","import React,{ Component, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport clsx from 'clsx';\r\nimport { green } from '@material-ui/core/colors';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TodayRoundedIcon from '@material-ui/icons/TodayRounded';\r\nimport DialpadRoundedIcon from '@material-ui/icons/DialpadRounded';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport NotesRoundedIcon from '@material-ui/icons/NotesRounded';\r\nimport Barang from './Barang';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {findIndex, without} from 'lodash'\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\nconst currencies = [\r\n    {\r\n      value: 'Americano',\r\n      label: 'AMC',\r\n    },\r\n    {\r\n      value: 'Kopi Susu',\r\n      label: 'KPSS',\r\n    }, {\r\n      value: 'Kopi Susu Bendol',\r\n      label: 'KSB',\r\n    },{\r\n      value: 'Kopi Susu Marley',\r\n      label: 'KSM',\r\n    },{\r\n      value: 'Kopi Matcha',\r\n      label: 'KM',\r\n    },{\r\n      value: 'Kopi Susu Orang Tua',\r\n      label: 'KSQT',\r\n    },{\r\n      value: 'Kopi Susu Balak Enam',\r\n      label: 'KSBE',\r\n    },{\r\n      value: 'Robusta Tubruk',\r\n      label: 'RT',\r\n    },{\r\n      value: 'Daun Kopi Kawa',\r\n      label: 'DKK',\r\n    },{\r\n      value: 'Tubruk',\r\n      label: 'TBRK',\r\n    },{\r\n      value: 'V60',\r\n      label: 'V60',\r\n    },{\r\n      value: 'Japanese',\r\n      label: 'JPNS',\r\n    },{\r\n      value: 'Vietnam',\r\n      label: 'VNM',\r\n    },{\r\n      value: 'Teh Mint',\r\n      label: 'TM',\r\n    },{\r\n      value: 'Coklat',\r\n      label: 'CKLT',\r\n    },\r\n    {\r\n      value: 'Coklat Susu',\r\n      label: 'CS',\r\n    },{\r\n      value: 'Coklat Mint',\r\n      label: 'CM',\r\n    },{\r\n      value: 'Matcha',\r\n      label: 'MTC',\r\n    },{\r\n      value: 'Indomie',\r\n      label: 'INDM',\r\n    },{\r\n      value: 'Kentang',\r\n      label: 'KTG',\r\n    },{\r\n      value: 'Roti Panggang',\r\n      label: 'RP',\r\n    },\r\n   \r\n  ];\r\n  function formatRupiah(angka, prefix){\r\n\tvar number_string = angka.replace(/[^,\\d]/g, '').toString(),\r\n\tsplit   \t\t= number_string.split(','),\r\n\tsisa     \t\t= split[0].length % 3,\r\n\trupiah     \t\t= split[0].substr(0, sisa),\r\n\tribuan     \t\t= split[0].substr(sisa).match(/\\d{3}/gi);\r\n \r\n\t// tambahkan titik jika yang di input sudah menjadi angka ribuan\r\n\tif(ribuan){\r\n\t\tlet separator = sisa ? '.' : '';\r\n\t\trupiah += separator + ribuan.join('.');\r\n\t}\r\n \r\n\trupiah = split[1] != undefined ? rupiah + ',' + split[1] : rupiah;\r\n\treturn prefix == undefined ? rupiah : (rupiah ? rupiah : '');\r\n}\r\nfunction convertToRupiah(angka)\r\n{\r\n\tvar rupiah = '';\t\t\r\n\tvar angkarev = angka.toString().split('').reverse().join('');\r\n\tfor(var i = 0; i < angkarev.length; i++) if(i%3 == 0) rupiah += angkarev.substr(i,3)+'.';\r\n\treturn rupiah.split('',rupiah.length-1).reverse().join('');\r\n}\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: 'white',\r\n    backgroundColor: '#ca9b52',\r\n    '&:hover': {\r\n      backgroundColor: '#deb473',\r\n    },\r\n  },\r\n}))(Button);\r\nexport default function SimpleCard({login}) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [nota, setNota] = useState('');\r\n  const [nomor, setNomor] = useState('');\r\n  const [total, setTotal] = useState(0);\r\n  const [total_text, setTotalText] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const timer = useRef();\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n      });\r\n      const [alert, setAlert] = useState(false);\r\n    \r\n     \r\n    \r\n      const openAlert =  () => {\r\n        setAlert(true)\r\n      };\r\n    \r\n      const closeAlert = () => {\r\n        setAlert(false)\r\n      };\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  const handleNota = (value)=>{\r\n      setNota(value.target.value)\r\n  }\r\n  const handleNomor = (value)=>{\r\n    setNomor(value.target.value)\r\n}\r\n  const [currency, setCurrency] = useState('Kopi Susu');\r\n\r\n  const handleChange = (indexs, value) => {\r\n    let tempt = ser;\r\n    tempt[indexs-1].value = value;\r\n    \r\n    setSer([...tempt])\r\n\r\n  };\r\n\r\n  const insertChange = (indexs,value) => {\r\n    var tempt = formatRupiah(value,\"\")\r\n    let tempts = ser;\r\n    tempts[indexs-1].satuan = Number(tempt.replace(/[^0-9,-]+/g,\"\"));\r\n    tempts[indexs-1].input = tempt;\r\n    \r\n    setSer([...tempts])\r\n    changeTotal()\r\n  }\r\n  const changeNum = (indexs,value) => {\r\n    \r\n    let tempts = ser;\r\n    tempts[indexs-1].quantity = Number(value)\r\n\r\n    \r\n    setSer([...tempts])\r\n    changeTotal()\r\n  }\r\nfunction changeTotal(){\r\n    let tempts = ser;\r\n    var totald = 0;\r\n    for(var i=0;i < tempts.length;i++){\r\n        var temp = tempts[i].quantity * tempts[i].satuan;\r\n        totald += temp\r\n    }\r\n    var ler = convertToRupiah(Number(totald))\r\n    setTotalText(ler)\r\n    setTotal(Number(totald))\r\n}\r\n  const [ser,setSer] = useState([]);\r\n  const [number,setNumber] = useState(1);\r\n  const addSubmit = async(tanggal)=>{\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      timer.current = window.setTimeout(async () => {\r\n        \r\n        const result = await fetch(`/api/add`,{\r\n          method:'post',\r\n              body:JSON.stringify({\r\n                  nota, pesanan:nomor, tanggal:tanggal, total : Number(total.toString().replace(/[^0-9,-]+/g,\"\")), barang:ser\r\n              }),\r\n              headers:{\r\n                  'Content-Type':'application/json'\r\n              }\r\n              \r\n  \r\n      })\r\n      const body = await result.json();\r\n      console.log(body)\r\n      setSuccess(true);\r\n        setLoading(false);\r\n        setNota('')\r\n        setNomor('')\r\n        setCurrency('Kopi Susu')\r\n        setTotal(0)\r\n        setTotalText(0)\r\n        let tempt = []\r\n        let ro= {\r\n          index : 1,\r\n          value:'Kopi Susu',\r\n          satuan:0,\r\n          quantity :0,\r\n          input : 0\r\n      }\r\n      tempt.push(ro)\r\n        setSer([...tempt])\r\n        openAlert()\r\n      }, 2000);\r\n    \r\n  }\r\n    \r\n}\r\n  function submits(){\r\n      let pep = {}\r\n      \r\n      var month = selectedDate.getMonth() + 1;\r\n      \r\n          var day = selectedDate.getDate();\r\n      \r\n          var year = selectedDate.getFullYear();\r\n      \r\n         let tanggal = day + \"/\" + month + \"/\" + year;\r\n           \r\n      addSubmit(tanggal);\r\n      \r\n      console.log(pep)\r\n  }\r\n  \r\n  const deletes = (option) => {\r\n    let tempAts = ser;\r\n    tempAts = without(tempAts,option);\r\n    setSer([...tempAts])\r\n  }\r\n\r\n  const addBarang = (event) => {\r\n      let tempt = ser;\r\n      let number_new = number + 1;\r\n      let ro= {\r\n        index : number,\r\n        value:currency,\r\n        satuan:0,\r\n        quantity :0,\r\n        input:0\r\n    }\r\n      setNumber(number_new)\r\n    ro.index = number_new;\r\n    tempt.push(ro);\r\n    setSer([...tempt])\r\n  };\r\n \r\n  useEffect(()=>{\r\n    let ro= {\r\n        index : number,\r\n        value:currency,\r\n        satuan:0,\r\n        quantity :0,\r\n        input : 0\r\n    }\r\n    let yup = ser;\r\n  yup.push(ro);\r\n  setSer([...yup])\r\n},[login]);\r\n\r\n  return (\r\n    <>\r\n    <Card className={'card-form '}>\r\n        \r\n      <CardContent className=\"form-body\">\r\n          <h2 style={{margin:'0px',marginBottom:'20px'}}>Input Form</h2>  \r\n          <FormControl>\r\n          <Grid container spacing={2} style={{marginBottom:'10px'}}>\r\n          <Grid item>\r\n            <TodayRoundedIcon /> \r\n            \r\n          </Grid>\r\n          <Grid item>\r\n          <h4 style={{margin:'0px',paddingTop:'10px',fontWeight:'normal'}}>Tanggal : </h4>\r\n          </Grid>\r\n          <Grid item>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker style={{margin:'0px'}}\r\n          required\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          label=\"Required\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          fullWidth\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }} size=\"small\"\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{marginBottom:'10px'}}>\r\n          <Grid item>\r\n          <NotesRoundedIcon />\r\n            \r\n          </Grid>\r\n          <Grid item>\r\n          <h4 style={{margin:'0px',paddingTop:'10px',fontWeight:'normal'}}>No Nota : </h4>\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField InputLabelProps={{\r\n            shrink: true,\r\n          }} required id=\"standard-required\" value={nota}\r\n          onChange={handleNota} label=\"Required\" defaultValue=\"\" size=\"small\" variant=\"filled\"  fullWidth/>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{marginBottom:'10px'}}>\r\n          <Grid item>\r\n          <DialpadRoundedIcon /> \r\n            \r\n          </Grid>\r\n          <Grid item>\r\n          <h4 style={{margin:'0px',paddingTop:'10px',fontWeight:'normal'}}>No Pesanan : </h4>\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField value={nomor}\r\n          onChange={handleNomor} required size=\"small\" id=\"standard-required\" label=\"Required\" defaultValue=\"\" type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }} variant=\"filled\"  fullWidth/>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} style={{marginBottom:'20px',marginTop:'10px'}}>\r\n          <h3 style={{margin:'0px',marginLeft:'20px',marginBottom:'10px'}}>Barang : </h3><Button style={{border:'2px solid #ca9b52',color:'#ca9b52',fontWeight:'bold',marginLeft:'10px'}} variant=\"outlined\" color=\"primary\" onClick={addBarang}>\r\n  Add Barang\r\n</Button>\r\n\r\n            </Grid>\r\n            <Barang deletes={deletes} changeNum={changeNum} ser={ser} handleChange={handleChange} currencies={currencies} insertChange={insertChange}/>\r\n        <hr></hr>\r\n        <h3 style={{margin:'0px',marginLeft:'20px',marginBottom:'10px',fontWeight:'normal'}}>Total Harga : <font style={{fontWeight:'bold'}}>Rp{total_text}</font></h3>\r\n       \r\n      <ColorButton\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={buttonClassname}\r\n          endIcon={<SendRoundedIcon />}\r\n          disabled={loading}\r\n          onClick={submits}\r\n          style={{margin:'10px'}}\r\n        >\r\n         Send\r\n        </ColorButton>\r\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n          </FormControl>\r\n          \r\n          \r\n          \r\n        \r\n      </CardContent>\r\n    </Card>\r\n    <Snackbar\r\n        \r\n        open={alert}\r\n        onClose={closeAlert}\r\n        message=\"Berhasil ditambahkan\"\r\n        key={'bottom' + 'center'} />\r\n</>\r\n  );\r\n}","import React from 'react'\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>Not Found Page</h1>\r\n)\r\n\r\nexport default NotFoundPage","import 'date-fns';\r\nimport React,{ Component, useEffect, useState, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Card } from '@material-ui/core';\r\nimport { makeStyles,lighten } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PropTypes from 'prop-types';\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  }));\r\n  \r\n  \r\n  function rubah(angka){\r\n    var reverse = angka.toString().split('').reverse().join(''),\r\n    ribuan = reverse.match(/\\d{1,3}/g);\r\n    ribuan = \"Rp\"+ribuan.join('.').split('').reverse().join('');\r\n    return ribuan;\r\n  }\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  const headCells = [\r\n    { id: 'nota', numeric: false, disablePadding: true, label: 'No. Nota' },\r\n    { id: 'pesanan', numeric: false, disablePadding: false, label: 'No. Pesanan' },\r\n    { id: 'barang', numeric: false, disablePadding: false, label: 'Barang' },\r\n    { id: 'harga_satuan', numeric: false, disablePadding: false, label: 'Harga Satuan' },\r\n    { id: 'jumlah', numeric: false, disablePadding: false, label: 'Jumlah Barang' },\r\n    { id: 'harga', numeric: false, disablePadding: false, label: 'Jumlah Harga' },\r\n    { id: 'saldo', numeric: false, disablePadding: false, label: 'Saldo' },\r\n  ];\r\n  function EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all nota' }}\r\n            />\r\n          </TableCell>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.numeric ? 'right' : 'left'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n  EnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n    const handleDelete = (event)=>{\r\n        async function deleteData(){\r\n           \r\n            const result = await fetch(`/api/delete`,{\r\n                method:'post',\r\n                body:JSON.stringify({\r\n                    nota:props.selected\r\n                }),\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                }\r\n            })\r\n          const json = await result.json()\r\n          \r\n          console.log(json)\r\n        }\r\n        deleteData()\r\n        let lists = props.selected;\r\n       let tempt = props.data;\r\n\r\n\r\n\r\nfunction check(row) {\r\n  return !lists.includes(row[\"nota\"])\r\n}\r\n\r\n\r\n\r\nlet x = tempt.filter(check)\r\nprops.setData(x)\r\nprops.setSelected([])\r\n      }\r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n            Nota\r\n          </Typography>\r\n        )}\r\n  \r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon onClick={handleDelete}/>\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </Toolbar>\r\n    );\r\n  };\r\n  \r\n  EnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }));\r\nexport default function ShowPage({login}) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([]);\r\n    const [lastIndex, setlast] = useState(0);\r\n    \r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('nota');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [dense, setDense] = useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    \r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n      };\r\n      const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n          const newSelecteds = data.map((n) => n.nota);\r\n          setSelected(newSelecteds);\r\n          return;\r\n        }\r\n        setSelected([]);\r\n      };\r\n\r\n      const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n    \r\n        if (selectedIndex === -1) {\r\n          newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n          newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n          newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n          newSelected = newSelected.concat(\r\n            selected.slice(0, selectedIndex),\r\n            selected.slice(selectedIndex + 1),\r\n          );\r\n        }\r\n    \r\n        setSelected(newSelected);\r\n      };\r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n    \r\n      const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n      };\r\n      \r\n      \r\n    \r\n      const isSelected = (name) => selected.indexOf(name) !== -1;\r\n    \r\n      const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    async function fetchData(){\r\n        var month = selectedDate.getMonth() + 1;\r\n      \r\n          var day = selectedDate.getDate();\r\n      \r\n          var year = selectedDate.getFullYear();\r\n      \r\n         let tanggal = day + \"/\" + month + \"/\" + year;\r\n        const result = await fetch(`/api/nota`,{\r\n            method:'post',\r\n            body:JSON.stringify({\r\n                tanggal:tanggal\r\n            }),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        })\r\n      const json = await result.json()\r\n      setData([...json.map((item,index)=>{\r\n        item.id = index;\r\n        setlast(index);\r\n        return item;\r\n      })])\r\n      \r\n      console.log(json)\r\n    }\r\n    fetchData()\r\n    \r\n  }, [selectedDate]);\r\n  \r\n  return (\r\n    <>\r\n    <center>\r\n        <Card className={'card-form '} >\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date picker dialog\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n        </Card>\r\n        <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSelected={setSelected} data={data} setData={setData}/>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.nota);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.nota)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.nota}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.nota}\r\n                      </TableCell>\r\n                      <TableCell >{row.pesanan}</TableCell>\r\n              <TableCell >\r\n                  {\r\n                      row.barang.map((rows)=>(\r\n                        <p style={{margin:'0px',lineHeight:'30px'}}>{rows.value}</p>\r\n                      ))\r\n                  }\r\n                  \r\n              </TableCell>\r\n              <TableCell >{\r\n                      row.barang.map((rows)=>(\r\n                        <p style={{margin:'0px',lineHeight:'30px'}}>{rubah(Number(rows.satuan))}</p>\r\n                      ))\r\n                  }</TableCell>\r\n              <TableCell >\r\n              {row.barang.map((rows)=>(\r\n                        <p style={{margin:'0px',lineHeight:'30px'}}>{rows.quantity}</p>\r\n                      ))}\r\n              </TableCell>\r\n              <TableCell >\r\n              {row.barang.map((rows)=>(\r\n                        <p style={{margin:'0px',lineHeight:'30px'}}>{rubah((Number(rows.satuan)*Number(rows.quantity)))}</p>\r\n                      ))}\r\n              </TableCell>\r\n              <TableCell >{rubah(Number(row.total))}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      \r\n        \r\n    </center>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React, { useState,useEffect } from 'react';\nimport logo from './logo.svg';\nimport './css/App.css';\nimport ButtonAppBar from './components/Navbar'\nimport Container from '@material-ui/core/Container';\nimport Form from './components/Form'\nimport {\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n  withRouter,\n  Switch\n} from 'react-router-dom'\nimport NotFoundPage from './components/NotFoundPage';\nimport Show from './components/Show';\nfunction App() {\n  const location = useLocation();\n  const [page,setPage] = useState(false)\n  const [sed,setSed] = useState('sm')\n  const handlePage = (value)=>{\n    setPage(value)\n  }\n  function jek(value){\n    setSed(value)\n  }\n  useEffect(()=>{\n    const currentPath = location.pathname;\n    const searchParams = new URLSearchParams(location.search);\n    console.log(currentPath)\n    if(currentPath == '/'){\n      setSed('sm')\n      setPage(false)\n    }else{\n      setSed('md')\n      setPage(true)\n    }\n  },[location])\n  return (\n    \n    <>\n    <ButtonAppBar page={page} handlePage={handlePage}/>\n    <Container maxWidth={sed}>\n    <Switch>\n        <Route path=\"/\" render={(props)=><Form {...props} login={false}  />}   exact/>\n      <Route path=\"/show\" render={(props)=><Show {...props} login={false} />}  />\n    \n      <Route component={NotFoundPage} />\n        </Switch>\n      \n    </Container>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n  withRouter,\n  Switch\n} from 'react-router-dom'\nReactDOM.render(\n  <>\n  <Router>\n  <App />\n  </Router>\n    \n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}